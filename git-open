#!/usr/bin/env bash

# Opens the GitHub page for a repo/branch in your browser.
# https://github.com/paulirish/git-open/
#
# git open
# git open [remote] [branch]


# are we in a git repo?
git rev-parse --is-inside-work-tree &>/dev/null

if [[ $? != 0 ]]; then
  echo "Not a git repository." 1>&2
  exit 1
fi


# assume origin if not provided
# fallback to upstream if neither is present.
urlAppend=""
remote="origin"
if [ -n "$1" ]; then
  if [ "$1" == "issue" ]; then
    currentBranch=$(git symbolic-ref -q --short HEAD)
    regex='^issue'
    if [[ $currentBranch =~ $regex ]]; then
      issue=${currentBranch#*#}
    else
      echo "'git open issue' expect branch naming to be issues/#123" 1>&2
      exit 1
    fi

  elif [ "$1" == "issues" ]; then
  	urlAppend="issues"
  else
    remote="$1"
  fi
fi

remote_url="remote.${remote}.url"

# get current branch
if [ -z "$2" ]; then
  branch=$(git symbolic-ref -q --short HEAD)
else
  branch="$2"
fi

giturl=$(git config --get "$remote_url")
if [ -z "$giturl" ]; then
   remote_url="remote.origin.url"
   giturl=$(git config --get "$remote_url")
   branch="$1"
fi


# Make # and % characters url friendly
#   github.com/paulirish/git-open/pull/24
branch=${branch//%/%25} && branch=${branch//#/%23}

# URL normalization
# GitHub gists
if grep -q gist.github <<<$giturl; then
  giturl=${giturl/git\@gist.github\.com\:/https://gist.github.com/}
  providerUrlDifference=tree

# GitHub
elif grep -q github <<<$giturl; then
  giturl=${giturl/git\@github\.com\:/https://github.com/}

  # handle SSH protocol (links like ssh://git@github.com/user/repo)
  giturl=${giturl/#ssh\:\/\/git\@github\.com\//https://github.com/}

  providerUrlDifference=tree
fi
giturl=${giturl%\.git}

if [ -n "$issue" ]; then
  giturl="${giturl}/issues/${issue}"
elif [ -n "$branch" ]; then
  giturl="${giturl}/${providerUrlDifference}/${branch}"
fi
echo "$giturl"
# simplify URL for master
giturl=${giturl/tree\/master/}

# get current open browser command
case $( uname -s ) in
  Darwin)  open=open;;
  MINGW*)  open=start;;
  CYGWIN*) open=cygstart;;
  MSYS*)   open="powershell.exe â€“NoProfile Start";;
  *)       open=${BROWSER:-xdg-open};;
esac

# open it in a browser
$open "$giturl${urlAppend}" &> /dev/null
exit $?

